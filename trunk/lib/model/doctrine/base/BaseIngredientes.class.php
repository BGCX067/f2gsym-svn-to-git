<?php

/**
 * BaseIngredientes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $plato_id
 * @property integer $ingrediente_id
 * @property double $grms
 * @property Plato $Plato
 * @property Ingrediente $Ingrediente
 * 
 * @method integer      getPlatoId()        Returns the current record's "plato_id" value
 * @method integer      getIngredienteId()  Returns the current record's "ingrediente_id" value
 * @method double       getGrms()           Returns the current record's "grms" value
 * @method Plato        getPlato()          Returns the current record's "Plato" value
 * @method Ingrediente  getIngrediente()    Returns the current record's "Ingrediente" value
 * @method Ingredientes setPlatoId()        Sets the current record's "plato_id" value
 * @method Ingredientes setIngredienteId()  Sets the current record's "ingrediente_id" value
 * @method Ingredientes setGrms()           Sets the current record's "grms" value
 * @method Ingredientes setPlato()          Sets the current record's "Plato" value
 * @method Ingredientes setIngrediente()    Sets the current record's "Ingrediente" value
 * 
 * @package    fit2go
 * @subpackage model
 * @author     Ing. Roberto HernÃ¡ndez De La Luz
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIngredientes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ingredientes');
        $this->hasColumn('plato_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('ingrediente_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('grms', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Plato', array(
             'local' => 'plato_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Ingrediente', array(
             'local' => 'ingrediente_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}