<?php

/**
 * BasePlato
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property boolean $disponible
 * @property double $precio
 * @property string $imagen
 * @property float $calorias
 * @property float $proteinas
 * @property float $grasas
 * @property float $carbohidratos
 * @property float $colesterol
 * @property float $sodio
 * @property integer $weightwatcher
 * @property integer $categoria_id
 * @property Doctrine_Collection $Ingrediente
 * @property Doctrine_Collection $Menu
 * @property Doctrine_Collection $itemsmenu
 * @property Doctrine_Collection $Ingredientes
 * @property Categoria $categoria
 * @property Itemsorden $itemsorden
 * 
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method boolean             getDisponible()    Returns the current record's "disponible" value
 * @method double              getPrecio()        Returns the current record's "precio" value
 * @method string              getImagen()        Returns the current record's "imagen" value
 * @method float               getCalorias()      Returns the current record's "calorias" value
 * @method float               getProteinas()     Returns the current record's "proteinas" value
 * @method float               getGrasas()        Returns the current record's "grasas" value
 * @method float               getCarbohidratos() Returns the current record's "carbohidratos" value
 * @method float               getColesterol()    Returns the current record's "colesterol" value
 * @method float               getSodio()         Returns the current record's "sodio" value
 * @method integer             getWeightwatcher() Returns the current record's "weightwatcher" value
 * @method integer             getCategoriaId()   Returns the current record's "categoria_id" value
 * @method Doctrine_Collection getIngrediente()   Returns the current record's "Ingrediente" collection
 * @method Doctrine_Collection getMenu()          Returns the current record's "Menu" collection
 * @method Doctrine_Collection getItemsmenu()     Returns the current record's "itemsmenu" collection
 * @method Doctrine_Collection getIngredientes()  Returns the current record's "Ingredientes" collection
 * @method Categoria           getCategoria()     Returns the current record's "categoria" value
 * @method Itemsorden          getItemsorden()    Returns the current record's "itemsorden" value
 * @method Plato               setName()          Sets the current record's "name" value
 * @method Plato               setDescription()   Sets the current record's "description" value
 * @method Plato               setDisponible()    Sets the current record's "disponible" value
 * @method Plato               setPrecio()        Sets the current record's "precio" value
 * @method Plato               setImagen()        Sets the current record's "imagen" value
 * @method Plato               setCalorias()      Sets the current record's "calorias" value
 * @method Plato               setProteinas()     Sets the current record's "proteinas" value
 * @method Plato               setGrasas()        Sets the current record's "grasas" value
 * @method Plato               setCarbohidratos() Sets the current record's "carbohidratos" value
 * @method Plato               setColesterol()    Sets the current record's "colesterol" value
 * @method Plato               setSodio()         Sets the current record's "sodio" value
 * @method Plato               setWeightwatcher() Sets the current record's "weightwatcher" value
 * @method Plato               setCategoriaId()   Sets the current record's "categoria_id" value
 * @method Plato               setIngrediente()   Sets the current record's "Ingrediente" collection
 * @method Plato               setMenu()          Sets the current record's "Menu" collection
 * @method Plato               setItemsmenu()     Sets the current record's "itemsmenu" collection
 * @method Plato               setIngredientes()  Sets the current record's "Ingredientes" collection
 * @method Plato               setCategoria()     Sets the current record's "categoria" value
 * @method Plato               setItemsorden()    Sets the current record's "itemsorden" value
 * 
 * @package    fit2go
 * @subpackage model
 * @author     Ing. Roberto HernÃ¡ndez De La Luz
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlato extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('plato');
        $this->hasColumn('name', 'string', 70, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 70,
             ));
        $this->hasColumn('description', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('disponible', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('precio', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('imagen', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('calorias', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('proteinas', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('grasas', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('carbohidratos', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('colesterol', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('sodio', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('weightwatcher', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('categoria_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Ingrediente', array(
             'refClass' => 'Ingredientes',
             'local' => 'plato_id',
             'foreign' => 'ingrediente_id'));

        $this->hasMany('Menu', array(
             'refClass' => 'ItemsMenu',
             'local' => 'plato_id',
             'foreign' => 'menu_id'));

        $this->hasMany('Itemsmenu as itemsmenu', array(
             'local' => 'id',
             'foreign' => 'plato_id'));

        $this->hasMany('Ingredientes', array(
             'local' => 'id',
             'foreign' => 'plato_id'));

        $this->hasOne('Categoria as categoria', array(
             'local' => 'categoria_id',
             'foreign' => 'id'));

        $this->hasOne('Itemsorden as itemsorden', array(
             'local' => 'id',
             'foreign' => 'plato_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'description',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}