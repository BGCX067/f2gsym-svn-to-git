<?php

/**
 * BaseUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tipo
 * @property string $nombre
 * @property string $apellido
 * @property string $email
 * @property string $clave
 * @property date $birthday
 * @property integer $telefono1
 * @property integer $telefono2
 * @property boolean $sexo
 * @property string $cupon
 * @property integer $comoseentero_id
 * @property boolean $activo
 * @property boolean $recurrente
 * @property string $nota_usuario
 * @property string $nota_administrador
 * @property Creditcard $creditcard
 * @property Testimonio $testimonio
 * @property Doctrine_Collection $ordenes
 * @property Doctrine_Collection $Tipoingrediente
 * @property Doctrine_Collection $Direccion
 * @property Doctrine_Collection $preferenciastipoingre
 * @property Comoseentero $comoseentero
 * 
 * @method integer             getTipo()                  Returns the current record's "tipo" value
 * @method string              getNombre()                Returns the current record's "nombre" value
 * @method string              getApellido()              Returns the current record's "apellido" value
 * @method string              getEmail()                 Returns the current record's "email" value
 * @method string              getClave()                 Returns the current record's "clave" value
 * @method date                getBirthday()              Returns the current record's "birthday" value
 * @method integer             getTelefono1()             Returns the current record's "telefono1" value
 * @method integer             getTelefono2()             Returns the current record's "telefono2" value
 * @method boolean             getSexo()                  Returns the current record's "sexo" value
 * @method string              getCupon()                 Returns the current record's "cupon" value
 * @method integer             getComoseenteroId()        Returns the current record's "comoseentero_id" value
 * @method boolean             getActivo()                Returns the current record's "activo" value
 * @method boolean             getRecurrente()            Returns the current record's "recurrente" value
 * @method string              getNotaUsuario()           Returns the current record's "nota_usuario" value
 * @method string              getNotaAdministrador()     Returns the current record's "nota_administrador" value
 * @method Creditcard          getCreditcard()            Returns the current record's "creditcard" value
 * @method Testimonio          getTestimonio()            Returns the current record's "testimonio" value
 * @method Doctrine_Collection getOrdenes()               Returns the current record's "ordenes" collection
 * @method Doctrine_Collection getTipoingrediente()       Returns the current record's "Tipoingrediente" collection
 * @method Doctrine_Collection getDireccion()             Returns the current record's "Direccion" collection
 * @method Doctrine_Collection getPreferenciastipoingre() Returns the current record's "preferenciastipoingre" collection
 * @method Comoseentero        getComoseentero()          Returns the current record's "comoseentero" value
 * @method Usuario             setTipo()                  Sets the current record's "tipo" value
 * @method Usuario             setNombre()                Sets the current record's "nombre" value
 * @method Usuario             setApellido()              Sets the current record's "apellido" value
 * @method Usuario             setEmail()                 Sets the current record's "email" value
 * @method Usuario             setClave()                 Sets the current record's "clave" value
 * @method Usuario             setBirthday()              Sets the current record's "birthday" value
 * @method Usuario             setTelefono1()             Sets the current record's "telefono1" value
 * @method Usuario             setTelefono2()             Sets the current record's "telefono2" value
 * @method Usuario             setSexo()                  Sets the current record's "sexo" value
 * @method Usuario             setCupon()                 Sets the current record's "cupon" value
 * @method Usuario             setComoseenteroId()        Sets the current record's "comoseentero_id" value
 * @method Usuario             setActivo()                Sets the current record's "activo" value
 * @method Usuario             setRecurrente()            Sets the current record's "recurrente" value
 * @method Usuario             setNotaUsuario()           Sets the current record's "nota_usuario" value
 * @method Usuario             setNotaAdministrador()     Sets the current record's "nota_administrador" value
 * @method Usuario             setCreditcard()            Sets the current record's "creditcard" value
 * @method Usuario             setTestimonio()            Sets the current record's "testimonio" value
 * @method Usuario             setOrdenes()               Sets the current record's "ordenes" collection
 * @method Usuario             setTipoingrediente()       Sets the current record's "Tipoingrediente" collection
 * @method Usuario             setDireccion()             Sets the current record's "Direccion" collection
 * @method Usuario             setPreferenciastipoingre() Sets the current record's "preferenciastipoingre" collection
 * @method Usuario             setComoseentero()          Sets the current record's "comoseentero" value
 * 
 * @package    fit2go
 * @subpackage model
 * @author     Ing. Roberto HernÃ¡ndez De La Luz
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('tipo', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('nombre', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('apellido', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('email', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 60,
             ));
        $this->hasColumn('clave', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 60,
             ));
        $this->hasColumn('birthday', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('telefono1', 'integer', 10, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('telefono2', 'integer', 10, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 10,
             ));
        $this->hasColumn('sexo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('cupon', 'string', 30, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 30,
             ));
        $this->hasColumn('comoseentero_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('recurrente', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('nota_usuario', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 500,
             ));
        $this->hasColumn('nota_administrador', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 500,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Creditcard as creditcard', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasOne('Testimonio as testimonio', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('Orden as ordenes', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('Tipoingrediente', array(
             'refClass' => 'PreferenciasTipoingrediente',
             'local' => 'usuario_id',
             'foreign' => 'tipoingrediente_id'));

        $this->hasMany('Direccion', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('Preferenciastipoingrediente as preferenciastipoingre', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasOne('Comoseentero as comoseentero', array(
             'local' => 'comoseentero_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}