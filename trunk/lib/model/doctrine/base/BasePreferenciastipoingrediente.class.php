<?php

/**
 * BasePreferenciastipoingrediente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $usuario_id
 * @property integer $tipoingrediente_id
 * @property Usuario $Usuario
 * @property Tipoingrediente $Tipoingrediente
 * 
 * @method integer                     getUsuarioId()          Returns the current record's "usuario_id" value
 * @method integer                     getTipoingredienteId()  Returns the current record's "tipoingrediente_id" value
 * @method Usuario                     getUsuario()            Returns the current record's "Usuario" value
 * @method Tipoingrediente             getTipoingrediente()    Returns the current record's "Tipoingrediente" value
 * @method Preferenciastipoingrediente setUsuarioId()          Sets the current record's "usuario_id" value
 * @method Preferenciastipoingrediente setTipoingredienteId()  Sets the current record's "tipoingrediente_id" value
 * @method Preferenciastipoingrediente setUsuario()            Sets the current record's "Usuario" value
 * @method Preferenciastipoingrediente setTipoingrediente()    Sets the current record's "Tipoingrediente" value
 * 
 * @package    fit2go
 * @subpackage model
 * @author     Ing. Roberto HernÃ¡ndez De La Luz
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePreferenciastipoingrediente extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('preferenciastipoingrediente');
        $this->hasColumn('usuario_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('tipoingrediente_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Tipoingrediente', array(
             'local' => 'tipoingrediente_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}